package grap;

import java.util.Arrays;

public class One {
	 public static int solution(int[] arr) {
	        int answer = -1;
	        
	        Arrays.sort(arr);
	        int num = arr.length;
	        if(num % 2 != 0) {
	        	num = (arr.length + 1) / 2 - 1;
	        }else {
	        	num = (arr.length + 1) / 2;
	        }
	        
	        answer = arr[num-1] + 1;

	        for(int i = 0 ; i < arr.length; i++) {
	        	System.out.print(arr[i] + " ");
	        }
	        return answer;
	    }
		public static void main(String[] args) {
			int[] arr = {1,52,125,10,25,201,244,192,128,23,203,98,154,255};
			int result = solution(arr);
			System.out.println(result);
		}
	}

	
	 /*
	  * 문제 설명
0 이상 255 이하인 정수로 이루어진 배열 arr가 매개변수로 주어집니다. "임계값 이상"인 숫자의 개수를 a, "임계값 미만"인 숫자의 개수를 b라고 할 때 a와 b의 차이가 최소가 되는 임계값(Threshold)을 return 하도록 solution 함수를 완성해주세요.

단, a와 b의 차이가 최소가 되는 임계값이 여러 개라면 그중 가장 작은 값을 선택합니다.

제한사항
arr의 길이는 1 이상 1,000 이하입니다.
arr의 원소는 0 이상 255 이하인 정수입니다.
입출력 예
arr	result
[1,52,125,10,25,201,244,192,128,23,203,98,154,255]	126
[0,0,255,255,0,0,255,255,255]	1
[100,50,100,200]	51
입출력 예 설명
입출력 예 #1

임계값이 0이라면 임계값 이상인 수는 14개, 임계값 미만인 수는 0개입니다.

임계값이 255라면 임계값 이상인 수는 1개, 임계값 미만인 수는 13개입니다.

임계값이 126이라면 임계값 이상인 수는 7개, 임계값 미만인 수는 7개로 a와 b의 차이가 최소입니다.

임계값이 126인 경우
1	52	125	10	25	201	244	192	128	23	203	98	154	255
미만	미만	미만	미만	미만	이상	이상	이상	이상	미만	이상	미만	이상	이상
입출력 예 #2

임계값이 1인 경우 임계값 이상인 수는 5개, 임계값 미만인 수는 4개로 a와 b의 차이가 최소입니다.

임계값이 2 ~ 255인 경우에도 마찬가지로 임계값 이상인 수는 5개, 임계값 미만인 수는 4개로 a와 b의 차이가 최소지만, 이 경우 가장 작은 수인 1을 선택해야 합니다.

입출력 예 #3

임계값이 51인 경우 임계값 이상인 수는 3개, 임계값 미만인 수는 1개로 a와 b의 차이가 최소가 됩니다.

임계값이 101인 경우에도 임계값 이상인 수는 1개, 임계값 미만인 수는 3개로 a와 b의 차이가 최소지만, 더 작은 수인 51을 선택해야 합니다.
	  */
	
